extends layout

block content
  h1 Start or Join a Jitsi Meeting
  form#meetingForm
    .form-group
      label(for='meetingName') Enter a meeting name to join or leave blank to start a new one:
      input#meetingName.form-control(type='text', placeholder='Meeting Name')
    button.btn.btn-primary(type='submit') Submit

  section#jitsiMeetContainer(style='width: 100%; min-height: 500px; height: 80vh; display: none;')

  script(src='https://meet.jit.si/external_api.js' defer)
  script.
    document.addEventListener('DOMContentLoaded', function() {
      const form = document.getElementById('meetingForm');
      form.addEventListener('submit', function(event) {
        event.preventDefault();
        const meetingName = document.getElementById('meetingName').value.trim();
        initializeJitsiMeet(meetingName || 'PublicPhoneMeeting' + Math.random().toString(36).substr(2, 5));
        form.style.display = 'none'; // Hide form
        document.getElementById('jitsiMeetContainer').style.display = 'block'; // Show Jitsi container
      });
    });

    function initializeJitsiMeet(roomName) {
      const domain = 'meet.jit.si';
      const container = document.getElementById('jitsiMeetContainer');
      if (!container) {
        console.error('Jitsi Meet container not found.');
        return;
      }

      const options = {
        roomName: roomName,
        width: '100%',
        height: Math.max(container.clientHeight, window.innerHeight || 0) - 200,
        parentNode: container,
        interfaceConfigOverwrite: {
          TOOLBAR_BUTTONS: [
            'microphone', 'camera', 'closedcaptions', 'fullscreen',
            'fodeviceselection', 'hangup', 'profile', 'info', 'chat',
            'recording', 'livestreaming', 'etherpad', 'sharedvideo', 'settings',
            'raisehand', 'videoquality', 'filmstrip', 'invite', 'feedback', 'stats', 'shortcuts',
            'tileview', 'videobackgroundblur', 'download', 'help', 'mute-everyone', 'security'
          ],
          SHOW_JITSI_WATERMARK: false,
        },
        configOverwrite: {
          disableRecordAudioNotification: true,
          disableRecording: true,
        },
      };

      try {
        const api = new JitsiMeetExternalAPI(domain, options);
        api.addEventListener('participantJoined', () => {
          console.log('A new participant has joined the meeting.');
        });
      } catch (error) {
        console.error('Failed to initialize Jitsi Meet API:', error);
      }
    }
